
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author mrthi
 */
public class Inicial extends javax.swing.JFrame {

    /**
     * Creates new form Inicial
     */
    public Inicial() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        BoxCompra = new javax.swing.JCheckBox();
        BoxVenda = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        FieldMoeda = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        FieldDataEHora = new javax.swing.JTextField();
        BoxHoraAtual = new javax.swing.JCheckBox();
        PanelVenda = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        FieldValorNaCompra = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        FieldValorNaVenda = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        FieldDataDaCompra = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        FieldDataDaVenda = new javax.swing.JTextField();
        BoxHoraAtual2 = new javax.swing.JCheckBox();
        LabelValorAtual = new javax.swing.JLabel();
        FieldValorAtual = new javax.swing.JTextField();
        ButtonRegistrar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        FieldValorInvestido = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BitBook");
        setResizable(false);

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Vamos aos registros!", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Semilight", 1, 24), new java.awt.Color(0, 51, 102))); // NOI18N
        jLayeredPane1.setForeground(new java.awt.Color(60, 63, 65));
        jLayeredPane1.setToolTipText("Insira os dados nos campos. Não coloque nada além de números em valores.");

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel1.setText("O que deseja registrar hoje?");

        BoxCompra.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        BoxCompra.setText("Compra");
        BoxCompra.setNextFocusableComponent(BoxVenda);
        BoxCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxCompraActionPerformed(evt);
            }
        });

        BoxVenda.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        BoxVenda.setText("Venda");
        BoxVenda.setNextFocusableComponent(FieldMoeda);
        BoxVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxVendaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel2.setText("Qual moeda?");

        FieldMoeda.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        FieldMoeda.setToolTipText("Qual moeda comprou?");
        FieldMoeda.setNextFocusableComponent(FieldDataEHora);

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel3.setText("Data e Hora do Registro:");

        FieldDataEHora.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        FieldDataEHora.setToolTipText("Essa data estara no nome do arquivo. Caso seja compra, coloque a data da compra.");
        FieldDataEHora.setNextFocusableComponent(BoxHoraAtual);

        BoxHoraAtual.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        BoxHoraAtual.setText("Data e Hora Atual");
        BoxHoraAtual.setNextFocusableComponent(FieldValorAtual);
        BoxHoraAtual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxHoraAtualActionPerformed(evt);
            }
        });

        PanelVenda.setForeground(new java.awt.Color(60, 63, 65));

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel5.setText("Valor na Compra:");

        FieldValorNaCompra.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        FieldValorNaCompra.setToolTipText("Valor da moeda na hora da compra.");
        FieldValorNaCompra.setNextFocusableComponent(FieldValorNaVenda);
        FieldValorNaCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldValorNaCompraActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel6.setText("Valor na Venda:");

        FieldValorNaVenda.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        FieldValorNaVenda.setToolTipText("Falor da moeda na hora da venda.");
        FieldValorNaVenda.setNextFocusableComponent(FieldDataDaCompra);

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel4.setText("Data da compra:");

        FieldDataDaCompra.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        FieldDataDaCompra.setToolTipText("A data em que você comprou.");
        FieldDataDaCompra.setNextFocusableComponent(FieldDataDaVenda);

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel8.setText("Data da Venda:");

        FieldDataDaVenda.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        FieldDataDaVenda.setToolTipText("A data em que você vendeu.");
        FieldDataDaVenda.setNextFocusableComponent(BoxHoraAtual2);

        BoxHoraAtual2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        BoxHoraAtual2.setText("Data e Hora Atual");
        BoxHoraAtual2.setNextFocusableComponent(ButtonRegistrar);
        BoxHoraAtual2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxHoraAtual2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelVendaLayout = new javax.swing.GroupLayout(PanelVenda);
        PanelVenda.setLayout(PanelVendaLayout);
        PanelVendaLayout.setHorizontalGroup(
            PanelVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelVendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5)
                        .addComponent(FieldValorNaCompra, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addComponent(FieldValorNaVenda)
                        .addComponent(jLabel4)
                        .addComponent(FieldDataDaCompra)
                        .addComponent(jLabel8)
                        .addComponent(FieldDataDaVenda))
                    .addComponent(BoxHoraAtual2))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        PanelVendaLayout.setVerticalGroup(
            PanelVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelVendaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(FieldValorNaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(FieldValorNaVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(FieldDataDaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(FieldDataDaVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BoxHoraAtual2)
                .addContainerGap())
        );

        LabelValorAtual.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        LabelValorAtual.setText("Valor na Compra:");

        FieldValorAtual.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        FieldValorAtual.setToolTipText("Valor da moeda na compra.");
        FieldValorAtual.setNextFocusableComponent(FieldValorInvestido);

        ButtonRegistrar.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        ButtonRegistrar.setText("Registrar");
        ButtonRegistrar.setToolTipText("Clique para criar o arquivo. O mesmo estara na área de trabalho.");
        ButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRegistrarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        jLabel7.setText("Valor Investido:");

        FieldValorInvestido.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        FieldValorInvestido.setToolTipText("O valor que você investiu");
        FieldValorInvestido.setNextFocusableComponent(FieldValorNaCompra);
        FieldValorInvestido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldValorInvestidoActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(BoxCompra, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(BoxVenda, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(FieldMoeda, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(FieldDataEHora, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(BoxHoraAtual, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(PanelVenda, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(LabelValorAtual, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(FieldValorAtual, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(ButtonRegistrar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(FieldValorInvestido, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(FieldValorInvestido, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130)
                        .addComponent(ButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FieldMoeda, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(BoxCompra)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BoxVenda))
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(FieldDataEHora, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BoxHoraAtual)
                            .addComponent(LabelValorAtual)
                            .addComponent(FieldValorAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(58, 58, 58)
                        .addComponent(PanelVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BoxVenda)
                            .addComponent(BoxCompra, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(FieldMoeda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(15, 15, 15)
                        .addComponent(FieldDataEHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BoxHoraAtual)
                        .addGap(18, 18, 18)
                        .addComponent(LabelValorAtual)
                        .addGap(18, 18, 18)
                        .addComponent(FieldValorAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FieldValorInvestido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FieldValorNaCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldValorNaCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldValorNaCompraActionPerformed

    private void BoxCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxCompraActionPerformed

        if (BoxCompra.isSelected()) { // se compra for selecionado ele retira alguns campos

            BoxVenda.setSelected(false);

            PanelVenda.setVisible(false);

            FieldValorAtual.setVisible(true);

            LabelValorAtual.setVisible(true);
           

        }

    }//GEN-LAST:event_BoxCompraActionPerformed

    private void BoxVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxVendaActionPerformed

        if (BoxVenda.isSelected()) { // caso hora atual seja selecionada, ele preenche automático

            BoxCompra.setSelected(false);

            PanelVenda.setVisible(true);

            FieldValorAtual.setVisible(false);

            FieldValorAtual.setText(null);

            LabelValorAtual.setVisible(false);

        }
    }//GEN-LAST:event_BoxVendaActionPerformed

    private void BoxHoraAtualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxHoraAtualActionPerformed

        if (BoxHoraAtual.isSelected()) {

            LocalDateTime dataHoraAtual = LocalDateTime.now();

            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");

            String dataHoraFormatada = dataHoraAtual.format(formatter);

            FieldDataEHora.setEnabled(false);
            FieldDataEHora.setText(dataHoraFormatada);

        } else {

            FieldDataEHora.setEnabled(true);

        }

    }//GEN-LAST:event_BoxHoraAtualActionPerformed

    private void FieldValorInvestidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldValorInvestidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldValorInvestidoActionPerformed

    private void BoxHoraAtual2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxHoraAtual2ActionPerformed

        if (BoxHoraAtual2.isSelected()) { // caso hora atual seja selecionada, ele preenche automático

            LocalDateTime dataHoraAtual = LocalDateTime.now();

            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");

            String dataHoraFormatada = dataHoraAtual.format(formatter);

            FieldDataDaVenda.setEnabled(false);
            FieldDataDaVenda.setText(dataHoraFormatada);

        } else {

            FieldDataDaVenda.setEnabled(true);

        }

    }//GEN-LAST:event_BoxHoraAtual2ActionPerformed

    private void ButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRegistrarActionPerformed

        String Texto = ""; // atrocidade criada para registrar as coisas num .txt kkkkkkk
        String ValorInvestido = FieldValorInvestido.getText();
        String ValorNaVenda = FieldValorNaVenda.getText();
        String ValorNaCompra = FieldValorNaCompra.getText();
        Double ValorEmMoeda = 0.0;
        Double ValorEmMoedaNaVenda = 0.0;
        Double Total = 0.0;

        if (BoxCompra.isSelected()) {
            Texto = "--------------------------------------------------\n"
                    + "Registro de compra.\n\nMoeda: " + FieldMoeda.getText()
                    + "\nHora da compra: " + FieldDataEHora.getText()
                    + "\nValor investido: R$" + FieldValorInvestido.getText()
                    + "\nValor do " + FieldMoeda.getText() + " na compra: R$" + FieldValorAtual.getText()
                    + "\n--------------------------------------------------";

        } else if (BoxVenda.isSelected()) {
            try {
                
                if (ValorInvestido.isEmpty() || ValorNaVenda.isEmpty()|| ValorNaCompra.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Por favor, preencha todos os campos necessários.", "Erro!", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                
                double ValorInvestidoDouble = Double.parseDouble(ValorInvestido);
                double ValorNaCompraDouble = Double.parseDouble(ValorNaCompra);
                double ValorNaVendaDouble = Double.parseDouble(ValorNaVenda);

                
                if (ValorInvestidoDouble <= 0 || ValorNaVendaDouble <= 0 || ValorNaCompraDouble <= 0) {
                    JOptionPane.showMessageDialog(null, "Os valores devem ser maiores que zero.", "Erro!", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                
                ValorEmMoeda = ValorInvestidoDouble / ValorNaCompraDouble;
                ValorEmMoedaNaVenda = ValorEmMoeda * ValorNaVendaDouble;
                Total = (ValorEmMoeda * ValorNaVendaDouble) - ValorInvestidoDouble;

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Por favor, insira valores numéricos válidos.", "Erro!", JOptionPane.ERROR_MESSAGE);
                return;
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(null, "Campo inválido ou não disponível no contexto atual.", "Erro!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            
            if (Total >= 0.0) {
                Texto = "--------------------------------------------------\n"
                        + "Registro de venda.\n\nMoeda: " + FieldMoeda.getText()
                        + "\nData e hora da compra: " + FieldDataEHora.getText()
                        + "\nValor investido: R$" + FieldValorInvestido.getText()
                        + "\nValor do " + FieldMoeda.getText() + " na compra: R$" + FieldValorNaCompra.getText()
                        + "\nTotal de " + FieldMoeda.getText() + " adquiridos: " + ValorEmMoeda
                        + "\nData e hora da Venda: " + FieldDataDaVenda.getText()
                        + "\nValor do " + FieldMoeda.getText() + " na venda: R$" + FieldValorNaVenda.getText()
                        + "\nValor total conseguido em R$ na hora da venda: R$" + ValorEmMoedaNaVenda
                        + "\nVocê obteve um lucro de: R$" + Total
                        + "\n--------------------------------------------------";
            } else {
                Texto = "--------------------------------------------------\n"
                        + "Registro de venda.\n\nMoeda: " + FieldMoeda.getText()
                        + "\nData e hora da compra: " + FieldDataEHora.getText()
                        + "\nValor investido: R$" + FieldValorInvestido.getText()
                        + "\nValor do " + FieldMoeda.getText() + " na compra: R$" + FieldValorNaCompra.getText()
                        + "\nTotal de " + FieldMoeda.getText() + " adquiridos: " + ValorEmMoeda
                        + "\nData e hora da Venda: " + FieldDataDaVenda.getText()
                        + "\nValor do " + FieldMoeda.getText() + " na venda: R$" + FieldValorNaVenda.getText()
                        + "\nValor total conseguido em R$ na hora da venda: R$" + ValorEmMoedaNaVenda
                        + "\nVocê obteve uma perda de: R$" + Total
                        + "\n--------------------------------------------------";
            }
        }

        try {
            
            String dataHoraCorrigida = FieldDataEHora.getText().replaceAll("[^a-zA-Z0-9]", "_");
            String desktopPath = FileSystemView.getFileSystemView().getHomeDirectory().getAbsolutePath();
            String fileName = "/Registros_de_movimentacao_" + FieldMoeda.getText() + "_" + dataHoraCorrigida + ".txt";

            FileWriter Writer = new FileWriter(desktopPath + fileName);
            Writer.write(Texto);
            Writer.close();

            JOptionPane.showMessageDialog(null, "Arquivo salvo com sucesso!", "Sucesso!", JOptionPane.INFORMATION_MESSAGE);
            
            dispose();
            
            Menu m = new Menu();
            m.setVisible(true);
            
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Houve um erro ao salvar o arquivo: " + e.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_ButtonRegistrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox BoxCompra;
    private javax.swing.JCheckBox BoxHoraAtual;
    private javax.swing.JCheckBox BoxHoraAtual2;
    private javax.swing.JCheckBox BoxVenda;
    private javax.swing.JButton ButtonRegistrar;
    private javax.swing.JTextField FieldDataDaCompra;
    private javax.swing.JTextField FieldDataDaVenda;
    private javax.swing.JTextField FieldDataEHora;
    private javax.swing.JTextField FieldMoeda;
    private javax.swing.JTextField FieldValorAtual;
    private javax.swing.JTextField FieldValorInvestido;
    private javax.swing.JTextField FieldValorNaCompra;
    private javax.swing.JTextField FieldValorNaVenda;
    private javax.swing.JLabel LabelValorAtual;
    private javax.swing.JPanel PanelVenda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    // End of variables declaration//GEN-END:variables
}
